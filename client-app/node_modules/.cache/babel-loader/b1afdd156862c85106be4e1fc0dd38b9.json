{"ast":null,"code":"const INITIAL_STATE = {\n  todo_list: []\n};\n\nconst todoReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      return {\n        state,\n        todo_list: [state.todo_list, {\n          id: Math.floor(Math.random() * 1000000) + 1,\n          title: action.title,\n          is_done: false\n        }]\n      };\n\n    case \"REMOVE_ITEM\":\n      return { ...state,\n        todo_list: state.todo_list.filter(el => el.id !== action.item_id)\n      };\n\n    case \"MARK_ITEM_DONE\":\n      const doneItemIndex = state.todo_list.findIndex(item => item.id === action.item_id);\n\n      if (doneItemIndex < 0) {\n        return state;\n      }\n\n      return { ...state,\n        todo_list: [...state.todo_list.slice(0, doneItemIndex), { ...state.todo_list[doneItemIndex],\n          is_done: !state.todo_list[doneItemIndex].is_done\n        }, ...state.todo_list.slice(doneItemIndex + 1)]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;","map":{"version":3,"sources":["/Users/uddesha-barnwal/Desktop/todo_project/client-app/src/store/reducers/todo.ts"],"names":["INITIAL_STATE","todo_list","todoReducer","state","action","type","id","Math","floor","random","title","is_done","filter","el","item_id","doneItemIndex","findIndex","item","slice"],"mappings":"AAUA,MAAMA,aAAkC,GAAG;AACvCC,EAAAA,SAAS,EAAE;AAD4B,CAA3C;;AAIA,MAAMC,WAAW,GAAG,YAAwC;AAAA,MAAvCC,KAAuC,uEAA/BH,aAA+B;AAAA,MAAhBI,MAAgB;;AACxD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAM;AACFF,QAAAA,KADE;AAEFF,QAAAA,SAAS,EAAC,CACNE,KAAK,CAACF,SADA,EAEN;AACIK,UAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B,IAAsC,CAD9C;AAEIC,UAAAA,KAAK,EAAEN,MAAM,CAACM,KAFlB;AAGIC,UAAAA,OAAO,EAAE;AAHb,SAFM;AAFR,OAAN;;AAWA,SAAK,aAAL;AACI,aAAO,EACH,GAAGR,KADA;AAEHF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBW,MAAhB,CAAwBC,EAAD,IAAcA,EAAE,CAACP,EAAH,KAAUF,MAAM,CAACU,OAAtD;AAFR,OAAP;;AAIJ,SAAK,gBAAL;AACI,YAAMC,aAAqB,GAAGZ,KAAK,CAACF,SAAN,CAAgBe,SAAhB,CAA2BC,IAAD,IAAeA,IAAI,CAACX,EAAL,KAAYF,MAAM,CAACU,OAA5D,CAA9B;;AAEA,UAAIC,aAAa,GAAG,CAApB,EAAuB;AACnB,eAAOZ,KAAP;AACH;;AAED,aAAO,EACH,GAAGA,KADA;AAEHF,QAAAA,SAAS,EAAE,CACP,GAAGE,KAAK,CAACF,SAAN,CAAgBiB,KAAhB,CAAsB,CAAtB,EAAyBH,aAAzB,CADI,EAEP,EACI,GAAGZ,KAAK,CAACF,SAAN,CAAgBc,aAAhB,CADP;AAEIJ,UAAAA,OAAO,EAAE,CAACR,KAAK,CAACF,SAAN,CAAgBc,aAAhB,EAA+BJ;AAF7C,SAFO,EAMP,GAAGR,KAAK,CAACF,SAAN,CAAgBiB,KAAhB,CAAsBH,aAAa,GAAG,CAAtC,CANI;AAFR,OAAP;;AAWJ;AACI,aAAOZ,KAAP;AArCZ;AAuCC,CAxCL;;AA0CI,eAAeD,WAAf","sourcesContent":["export interface Todo {\n    id: number;\n    title:string;\n    is_done:boolean;\n}\n\ninterface TodoReducerInterface {\n    todo_list: Todo[]\n}\n\nconst INITIAL_STATE:TodoReducerInterface = {\n    todo_list: []\n}\n\nconst todoReducer = (state = INITIAL_STATE, action: any) => {\n    switch (action.type) {\n        case \"ADD_ITEM\":\n            return{\n                state,\n                todo_list:[\n                    state.todo_list,\n                    {\n                        id: Math.floor(Math.random() * 1000000) + 1,\n                        title: action.title,\n                        is_done: false\n                    }\n                ]\n            }\n            case \"REMOVE_ITEM\":\n                return {\n                    ...state,\n                    todo_list: state.todo_list.filter((el: Todo) => el.id !== action.item_id)\n                }\n            case \"MARK_ITEM_DONE\":\n                const doneItemIndex: number = state.todo_list.findIndex((item: any) => item.id === action.item_id);\n    \n                if (doneItemIndex < 0) {\n                    return state;\n                }\n    \n                return {\n                    ...state,\n                    todo_list: [\n                        ...state.todo_list.slice(0, doneItemIndex),\n                        {\n                            ...state.todo_list[doneItemIndex],\n                            is_done: !state.todo_list[doneItemIndex].is_done\n                        },\n                        ...state.todo_list.slice(doneItemIndex + 1),\n                    ]\n                }\n            default:\n                return state;\n        }\n    };\n    \n    export default todoReducer;"]},"metadata":{},"sourceType":"module"}